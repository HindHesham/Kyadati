{"version":3,"sources":["../../src/pages/driving-schools/driving-schools.module.ts","../../src/pages/driving-schools/driving-schools.ts"],"names":[],"mappings":"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","file":"16.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { DrivingSchoolsPage } from './driving-schools';\nimport { Ionic2RatingModule } from 'ionic2-rating';\nimport {CustomIconsModule} from 'ionic2-custom-icons';\n\n@NgModule({\n  declarations: [\n    DrivingSchoolsPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(DrivingSchoolsPage),\n    Ionic2RatingModule,\n    CustomIconsModule\n  ],\n})\nexport class DrivingSchoolsPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/driving-schools/driving-schools.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, ToastController, LoadingController } from 'ionic-angular';\n\nimport { NativeStorage } from '@ionic-native/native-storage';\nimport { drivingSchoolProvider } from '../../providers/drivingSchool.service';\nimport { citiesProvider } from '../../providers/cities.service';\n\n/**\n * Generated class for the DrivingSchoolsPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage({\n  name: 'DrivingSchoolsPage'\n})\n@Component({\n  selector: 'page-driving-schools',\n  templateUrl: 'driving-schools.html',\n})\nexport class DrivingSchoolsPage {\n  public rate: any;\n  public drivingSchoolObj: any =[];\n  public filterDrivingSchoolObj : any = [];\n  public citiesObj: any = [];\n  public selected: string;\n  public token = '15245142205ade3dac3c933';\n  public result: any;\n  public citiesResult: any;\n\n  constructor(public navCtrl: NavController, \n    public navParams: NavParams,\n    public loadingCtrl: LoadingController,\n    private nativeStorage: NativeStorage,\n    public toastCtrl: ToastController,\n    public drivingSchoolProvider: drivingSchoolProvider,\n    public citiesProvider: citiesProvider) { \n\n      this.selected = 'all';\n     }\n\n  ngOnInit() {\n\n    this.allDrivingSchools();\n    this.allCities();\n    \n  }\n\n  ionViewDidLoad() {}\n \n  allDrivingSchools(){\n\n    let loader = this.loadingCtrl.create({\n      spinner: 'crescent',\n      content: ''\n    });\n\n    loader.present().then(() => {\n\n              this.drivingSchoolProvider.allDrivingSchool()\n              .then(result=>{\n\n                this.result = JSON.parse(result.data);\n                //console.log(\"driving school result is: \"+ JSON.stringify(result));\n                if(this.result.status_code === 200){\n\n                  loader.dismiss();\n                  this.drivingSchoolObj = this.result.driving_schools;\n                  this.getAllDrivingSchool();\n                }\n                else{\n\n                  loader.dismiss();\n                  let toast = this.toastCtrl.create({\n                    message: \"check your internet connection\",\n                    duration: 3000,\n                    position: 'bottom'\n                  }); toast.present();\n                }\n\n              }).catch(error => {\n\n                loader.dismiss();\n                let toast = this.toastCtrl.create({\n                  message: \"أنت لست متصل بالانترنت\",\n                  duration: 3000,\n                  position: 'bottom'\n                }); toast.present();\n\n              });\n            \n         \n    })\n  }\n\n  getAllDrivingSchool(){\n    \n    return this.drivingSchoolObj;\n  }\n\n  allCities(){\n\n\n            this.citiesProvider.cities()\n            .then(result=>{\n\n              //console.log(\"cities result is: \"+ JSON.stringify(result));\n              this.citiesResult = JSON.parse(result.data);\n\n              if(this.citiesResult.status_code === 200){\n                \n                this.citiesObj = this.citiesResult.cities;\n                this.getAllCities();\n              }\n\n              else{\n                let toast = this.toastCtrl.create({\n                  message: \"Check Your internet connection and try again\",\n                  duration: 3000,\n                  position: 'bottom'\n                }); toast.present();\n              }\n\n            }).catch(error => {\n              let toast = this.toastCtrl.create({\n                message: \"You're Offline\",\n                duration: 3000,\n                position: 'bottom'\n              }); toast.present();\n            });\n           \n         \n      \n  }\n\n  getAllCities(){\n    return this.citiesObj;\n  }\n\n  cityChange(e){\n    \n    if(e === 'all'){\n      this.getAllDrivingSchool();\n    }\n    else{\n      this.filterDrivingSchoolObj = this.drivingSchoolObj.filter(value => value.city_name === e );\n      this.getAllFilteredDrivingSchool();\n    }\n   \n  }\n\n  getAllFilteredDrivingSchool(){\n    return this.filterDrivingSchoolObj;\n  }\n\n  gotoSchoolProfile(drivingSchoolId){\n    //e.stopPropagation();\n   // alert(\"from click method: \" + drivingSchoolObj);\n    this.navCtrl.push('DirvingSchoolDetailsPage', {\n      drivingSchoolId: drivingSchoolId\n    });\n  }\n\n  saveUserRating(e) {\n    console.log('clicked: ', e);\n  }\n\n \n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/driving-schools/driving-schools.ts"],"sourceRoot":""}